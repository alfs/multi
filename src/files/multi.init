#!/bin/bash

#Remember that facilities beginning with a $ is provided by the system
#local_fs is required because multi writes to /var/ (according to LSB 3.1)
### BEGIN INIT INFO
# Provides: multi
# Required-Start: $network $local_fs
# Required-Stop: $network $local_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: MULTI multihomed network manager
# Description: MULTI is a multihomed-compatible network manager, which also
#              broadcasts NW information
### END INIT INFO
MULTI_BIN=/usr/sbin/multi_client

case "$1" in
    start)
        echo "Starting MULTI network manager as daemon ..." #Expand variable
        if start-stop-daemon --oknodo --exec ${MULTI_BIN} --start -- -d; then  #Start-deamen is fantastic
            echo "MULTI started sucessfully."
        else
            echo "MULTI failed to start."
        fi
        ;; 
    stop)
        echo "Stopping MULTI network manager ..."
        if start-stop-daemon --oknodo --exec ${MULTI_BIN} --stop --retry 2; then
            echo "MULTI was stopped."
        else
            echo "MULTI could not be stopped sucessfully."
        fi
        ;;
    restart|force-reload)
        #Put these as functions
        echo "Stopping MULTI network manager ..."
        if start-stop-daemon --oknodo --exec ${MULTI_BIN} --stop --retry 2; then
            echo "MULTI was stopped."
        else
            echo "MULTI could not be stopped sucessfully."
            exit 1
        fi

        sleep 5

        echo "Starting MULTI network manager as daemon ..." #Expand variable
        if start-stop-daemon --oknodo --exec ${MULTI_BIN} --start -- -d; then  #Start-deamen is fantastic
            echo "MULTI started sucessfully."
        else
            echo "MULTI failed to start."
            exit 1
        fi

        ;;
    status)
       start-stop-daemon --oknodo --exec ${MULTI_BIN} --status
       exit $?
       ;;
    *)
        echo "Usage /etc/init.d/multi {start|stop|restart|status|force-reload}"
        exit 1
        ;;
esac

exit 0
